###############################################################################

https://cloud.google.com/community/tutorials/kotlin-springboot-compute-engine

https://cloud.google.com/community/tutorials/kotlin-springboot-container-engine

###############################################################################

prajwal041@cloudshell:~ (django17-217823)$ gsutil mb gs://springbootjpa
Creating gs://springbootjpa/...

prajwal041@cloudshell:~/Spring (django17-217823)$ git clone https://github.com/prajwal041/SpringDataREST.git
Cloning into 'SpringDataREST'...

Goto project Root:

prajwal041@cloudshell:~/Spring/SpringDataREST/SpringDataRest (django17-217823)$ gcloud compute instances create springbootjpa-instance --image-family debian-9 --image-project debian-cloud --machine-type g1-small --scopes "userinfo-email,cloud-platform" --metadata-from-file startup-script=instance-startup.sh --metadata BUCKET=springbootjpa --zone us-east1-b --tags http-server


Created [https://www.googleapis.com/compute/v1/projects/django17-217823/zones/us-east1-b/instances/springbootjpa-instance].
NAME                    ZONE        MACHINE_TYPE  PREEMPTIBLE  INTERNAL_IP  EXTERNAL_IP   STATUS
springbootjpa-instance  us-east1-b  g1-small                   10.142.0.3   35.229.82.85  RUNNING

1. Create an instance by running the following command:
prajwal041@cloudshell:~/Spring/SpringDataREST/SpringDataRest (django17-217823)$ gcloud compute instances get-serial-port-output springbootjpa-instance --zone us-east1-b

2. Check the progress of instance creation:
	gcloud compute instances get-serial-port-output springbootjpa-instance --zone us-east1-b
 
3. creating firewall-rules
gcloud compute firewall-rules create default-allow-http-8080 \
    --allow tcp:8080 \
    --source-ranges 0.0.0.0/0 \
    --target-tags http-server \
    --description "Allow port 8080 access to http-server"
	
4. Get the external IP address of your instance:
gcloud compute instances list	